<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<security:http pattern="/css/" security="none"/>
	<security:http>
		<!-- access="permitAll()" : 권한에 대한 체크가 들어감 => permitAll 시큐리티에 대한 메소드 -->
		<!-- permitAll() : 인증, 인가 무시하고 접속하는 모든 사람들에 대해서 허용을 하겠다 -->
		<security:intercept-url pattern="/top.jsp" access="permitAll()"/>
		<!-- access="hasAuthority('ROLE_ADMIN')" : 특정한 권한을 가진 사람만 체크 -->
		<!-- hasAuthority('ROLE_ADMIN') : 특정한 권한을 가진 경우에만 접근이 가능함 여기선 관리자롤 -->
		<security:intercept-url pattern="/admin/**" access="hasAuthority('ROLE_ADMIN')"/>
		<!-- 체크가 유알엘이 순차적으로 들어기 때문에 아스타가 밑에 있어야 함(개중요함) -->
		<!-- 권한과 상관없이 인증을 한 어드민, 유저 모드 접근가능 -->
		<!-- 루트밑에 있는 모든 페이지들에 인증한 대상만 허용? -->
		<security:intercept-url pattern="/**" access="isAuthenticated()"/>
		
		<!-- 인증과 관련된 정보들 -->
		<!-- default-target-url="/top.jsp" : 성공을 하면 찾아갈 URL -->
		<security:form-login default-target-url="/top.jsp"/>
		<!-- logout-url="/logout" : 로그아웃을 했을때 어디로 보낼지 정의함 -->
		<!-- logout-success-url="/top.jsp" : 로그아웃 성공했을 때 이동하는 페이지 -->
		<security:logout logout-url="/logout" logout-success-url="/top.jsp"/>
		<security:csrf disabled="true"/>
	</security:http>
	
	
	<security:authentication-manager>
	    <security:authentication-provider> <!-- 실질적으로 인증 체크하는 그걸 대상으로? 애 등록되어있는지 체크하는 애 -->
	    	<!-- 하나의 클래스로 만들어서 세션에 저장하는애 -->
	    	<security:jdbc-user-service data-source-ref="dataSource" 
	          users-by-username-query
	            ="select LOGIN_ID, PASSWORD, 1
	              from T_USER
	              where LOGIN_ID = ?"
	          authorities-by-username-query
	            ="select LOGIN_ID, ROLE_NAME
	              from T_ROLE
	                inner join T_USER_ROLE on T_ROLE.ID = T_USER_ROLE.ROLE_ID
	                inner join T_USER on T_USER_ROLE.USER_ID = T_USER.ID
	              where LOGIN_ID = ?" />
	        <security:password-encoder hash="bcrypt"/> <!-- bcrypt : 복호화 작업을함 -->
	    </security:authentication-provider>
    </security:authentication-manager>
</beans>
